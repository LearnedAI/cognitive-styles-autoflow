{
  "version": "1.0.0",
  "last_updated": 1755991701.576991,
  "domains_learned": [
    "ai-development",
    "git",
    "authentication"
  ],
  "total_nuggets": 28,
  "knowledge_gaps": [
    "react",
    "databases",
    "webrtc",
    "devtools",
    "security",
    "performance",
    "typescript",
    "nodejs",
    "docker"
  ],
  "domain_coverage": {
    "ai-development": "partial",
    "git": "partial"
  },
  "domains": {
    "authentication": {
      "nuggets": [
        "OAuth2-AuthorizationFlow.MOD"
      ],
      "coverage_areas": [],
      "last_updated": 1755974632.115751,
      "keywords": []
    },
    "react": {
      "nuggets": [],
      "coverage_areas": [],
      "last_updated": null,
      "keywords": []
    },
    "databases": {
      "nuggets": [],
      "coverage_areas": [],
      "last_updated": null,
      "keywords": []
    },
    "webrtc": {
      "nuggets": [],
      "coverage_areas": [],
      "last_updated": null,
      "keywords": []
    },
    "devtools": {
      "nuggets": [],
      "coverage_areas": [],
      "last_updated": null,
      "keywords": []
    },
    "security": {
      "nuggets": [],
      "coverage_areas": [],
      "last_updated": null,
      "keywords": []
    },
    "performance": {
      "nuggets": [],
      "coverage_areas": [],
      "last_updated": null,
      "keywords": []
    },
    "typescript": {
      "nuggets": [],
      "coverage_areas": [],
      "last_updated": null,
      "keywords": []
    },
    "nodejs": {
      "nuggets": [],
      "coverage_areas": [],
      "last_updated": null,
      "keywords": []
    },
    "git": {
      "nuggets": [
        "GitWorktrees-ParallelDevelopment.MOD"
      ],
      "coverage_areas": [
        "worktree-isolation",
        "parallel-development",
        "automation-integration",
        "lifecycle-management"
      ],
      "last_updated": "2025-08-23T20:45:00Z",
      "keywords": [
        "worktree",
        "parallel",
        "isolation",
        "development",
        "branch",
        "automation"
      ]
    },
    "docker": {
      "nuggets": [],
      "coverage_areas": [],
      "last_updated": null,
      "keywords": []
    },
    "ai-development": {
      "nuggets": [
        "ClaudeCode-OutputStyles.MOD",
        "ClaudeCode_SlashCommands.MOD",
        "ClaudeCode_Settings.MOD",
        "ClaudeCode_Overview.MOD",
        "ClaudeCode_Hooks.MOD",
        "ClaudeCode_Memory.MOD",
        "ClaudeCode_CLI_Reference.MOD",
        "ClaudeCode_Common_Workflows.MOD",
        "ClaudeCode_Quickstart.MOD",
        "ClaudeCode_Interactive_mode.MOD",
        "ClaudeCode_Iam.MOD",
        "ClaudeCode_Security.MOD",
        "ClaudeCode_Mcp.MOD",
        "ClaudeCode_Sub_agents.MOD",
        "ClaudeCode_Troubleshooting.MOD",
        "ClaudeCode_Costs.MOD",
        "ClaudeCode_Devcontainer.MOD",
        "ClaudeCode_Github_actions.MOD",
        "ClaudeCode_Llm_gateway.MOD",
        "ClaudeCode_Monitoring_usage.MOD",
        "ClaudeCode_Sdk.MOD",
        "ClaudeCode_Third_party_integrations.MOD",
        "ClaudeCode_Setup.MOD",
        "ClaudeCode_Data_Usage.MOD",
        "ClaudeCode_IDE_Integrations.MOD",
        "ClaudeCode_OutputStyles_Official.MOD"
      ],
      "coverage_areas": [
        "output-styles",
        "cognitive-automation",
        "style-transitions",
        "workflow-automation",
        "built-in-slash-commands",
        "custom-slash-commands",
        "syntax",
        "parameters",
        "command-types",
        "settings-files",
        "available-settings",
        "permission-settings",
        "settings-precedence",
        "environment-variables",
        "get-started-in-30-seconds",
        "what-claude-code-does-for-you",
        "why-developers-love-claude-code",
        "next-steps",
        "additional-resources",
        "quickstart",
        "step-1:-open-hooks-configuration",
        "step-2:-add-a-matcher",
        "step-3:-add-the-hook",
        "step-4:-save-your-configuration",
        "determine-memory-type",
        "claude.md-imports",
        "how-claude-looks-up-memories",
        "quickly-add-memories-with-the-`#`-shortcut",
        "directly-edit-memories-with-`/memory`",
        "cli-commands",
        "cli-flags",
        "see-also",
        "understand-new-codebases",
        "get-a-quick-codebase-overview",
        "find-relevant-code",
        "fix-bugs-efficiently",
        "refactor-code",
        "before-you-begin",
        "step-1:-install-claude-code",
        "step-2:-start-your-first-session",
        "step-3:-ask-your-first-question",
        "step-4:-make-your-first-code-change",
        "keyboard-shortcuts",
        "general-controls",
        "multiline-input",
        "quick-commands",
        "vim-mode",
        "authentication-methods",
        "anthropic-api-authentication",
        "cloud-provider-authentication",
        "access-control-and-permissions",
        "permission-system",
        "how-we-approach-security",
        "security-foundation",
        "permission-based-architecture",
        "built-in-protections",
        "user-responsibility",
        "configure-mcp-servers",
        "understanding-mcp-server-scopes",
        "scope-hierarchy-and-precedence",
        "local-scope",
        "project-scope",
        "what-are-subagents?",
        "key-benefits",
        "quick-start",
        "creating-subagents",
        "using-the-interactive-interface",
        "common-installation-issues",
        "windows-installation-issues:-errors-in-wsl",
        "linux-installation-issues:-permission-errors",
        "recommended-solution:-migrate-to-local-installation",
        "alternative-solution:-create-a-user-writable-npm-prefix-for-global-installs",
        "track-your-costs",
        "managing-costs-for-teams",
        "reduce-token-usage",
        "background-token-usage",
        "key-features",
        "getting-started-in-4-steps",
        "configuration-breakdown",
        "security-features",
        "customization-options",
        "why-use-claude-code-github-actions?",
        "what-can-claude-do?",
        "claude-code-action",
        "claude-code-action-(base)",
        "setup",
        "litellm-configuration",
        "prerequisites",
        "basic-litellm-setup",
        "authentication-methods",
        "static-api-key",
        "quick-start",
        "administrator-configuration",
        "configuration-details",
        "common-configuration-variables",
        "metrics-cardinality-control",
        "authentication",
        "anthropic-api-key",
        "third-party-api-credentials",
        "basic-sdk-usage",
        "command-line",
        "provider-comparison",
        "cloud-providers",
        "corporate-infrastructure",
        "configuration-overview",
        "using-bedrock-with-corporate-proxy",
        "system-requirements",
        "operating-systems",
        "hardware-requirements",
        "software-dependencies",
        "installation-methods",
        "core-data-usage-principles",
        "model-training-policy",
        "development-partner-program",
        "data-retention-policies",
        "session-data-retention",
        "supported-ides-and-editors",
        "visual-studio-code-(and-forks)",
        "jetbrains-ides",
        "other-editors",
        "installation-and-setup",
        "built-in-output-styles",
        "how-output-styles-work",
        "change-your-output-style",
        "create-a-custom-output-style",
        "specific-behaviors"
      ],
      "last_updated": 1755991701.576983,
      "keywords": [
        "claude-code",
        "output-style",
        "cognitive",
        "automation",
        "think",
        "plan",
        "build",
        "claude-code slashcommands",
        "claude-code settings",
        "claude-code overview",
        "claude-code hooks",
        "claude-code memory",
        "claude-code cli reference",
        "claude-code common workflows",
        "claude-code quickstart",
        "claude-code interactive mode",
        "claude-code iam",
        "claude-code security",
        "claude-code mcp",
        "claude-code sub agents",
        "claude-code troubleshooting",
        "claude-code costs",
        "claude-code devcontainer",
        "claude-code github actions",
        "claude-code llm gateway",
        "claude-code monitoring usage",
        "claude-code sdk",
        "claude-code third party integrations",
        "claude-code setup",
        "claude-code data usage",
        "claude-code ide integrations",
        "claude-code outputstyles official"
      ]
    }
  }
}
